<plain_text><page sequence="1">Paul Berg Royal Conservatory The Hague, Netherlands paul@koncon.nl Abstracting the Future: The Search for Musical Constructs During the last 20 years, there has been a succes- sion of software environments for composing with computers. Advances in software technology have been incorporated into systems for computer- assisted composition, which have become highly sophisticated. A parade of computer music work- stations has provided composers with the promise of brute strength, but most of these advances seem to be primarily technological in nature. Often the hardware technology of the 1990s uses the software technology of the 1970s and 1980s to realize the musical concepts of the 1960s. That is the rub. Given this opportunity to survey the state of the art, I considered reviewing some of the systems for computer-assisted composition, algorithmic com- position, musical signal processing, etc. of the last 20 years. The developments have been interesting. Note that I have lumped composition and signal processing systems together, since the arbitrary dis- tinctions that are often drawn between these activi- ties have seldom allowed the creation of useful tools for composers and performers. Note also the combination of composers and performers, since there is a performance aspect to composing com- puter music and a compositional aspect to per- forming. Ignoring the shared concerns of writing software for structures, sounds, and performances has limited the development of musical systems. But the more pressing problem concerns musical constructs. Almost 40 years ago, Lejaren Hiller (Hiller and Isaacson 1959) laid out two trajectories for compos- ing with computers: one based on the implementa- tion of a music theory, and the other based on a more general attitude toward composition. Most of the work described by Mr. Hiller is of the first type, implementing species counterpoint and other tradi- tional aspects of music theory to produce an aver- age result instead of an aesthetically superior re- sult. He noted that "experiments of this type, however, soon lead to the asking of whether there are formal principles of organization more general than the rules of composition involving harmony, counterpoint, and similar techniques" (Hiller and Isaacson 1959, p. 81). This question led him to ex- plore the use of Markov chains as a principle for compositional structuring. Although Markov chains became part of the common repertory of computer music tools, the first trajectory subse- quently attracted the most attention. Two exceptions to this occurred in the 1960s. One is the work of lannis Xenakis (1992) in compos- ing free stochastic music from 1957-1962. The other is Gottfried Michael Koenig's compositional projects, Project 1 (Koenig 1970a) and Project 2 (Koenig 1970b). Mr. Xenakis used probabilities to control shapes, densities, and areas, and invented schemes and explored their limits. He used statisti- cal formulas to control contour abstractions on a general level. He created a musical relevance for the use of stochastic principles by placing them within a compositional context. The power of his vision and the music he composed transformed some of these stochastic ideas into compositionally useful abstractions. Mr. Koenig went a somewhat different route. In- stead of inventing a scheme and validating it with exceptional compositions, he generalized from his compositional activities and expressed a number of compositional rules as simple abstractions. Many of his abstractions involved constrained random numbers for which he provided a musical interpre- tation. Tendency masks are an abstraction of a com- positional field that changes over time. Random choice with a repetition check abstracts serial pa- rameter organization. By the time that the first issue of Computer Mu- Computer Music Journal, 20:3, pp. 24-27, Fall 1996 ? 1996 Massachusetts Institute of Technology 24 Computer Music Journal</page><page sequence="2">sic Journal appeared in 1977, the work of Lejaren Hiller, lannis Xenakis, and Gottfried Michael Koe- nig was 10 to 20 years old. Some of it found its way into later computer music systems (and countless Max patches) as part of the basic repertoire of avail- able event generators. But for some reason, the real significance of this work as an example of "reduced instruction set composition" describing general tools that can be implemented in a wide range of musical applications was insufficiently recognized. The importance is that each of these composers generalized from a particular musical viewpoint and expressed a simplification of musical knowl- edge in such a way that it was useful in other con- texts. Simplicity, generality, and abstraction are the keys. The discussion and research, however, turned to more complex rather than more general systems. Continuing the line of empirical music theory sug- gested by Lejaren Hiller, Charles Ames (Ames and Domino 1992) realized several projects involving musical intelligence in a variety of genres, includ- ing Blue Note jazz and ragtime. Kemal Ebcioglu (1992) developed an expert system for harmonizing Bach chorales. David Cope (1991) analyzed and sim- ulated musical styles ranging from Johann Bach to Johannes Brahms with his experiments in musical intelligence (EMI). Connectionist models have been applied to various harmonization (Feulner 1993) and compositional (Todd 1989) tasks. Countless other examples of this approach could be cited. These example-based systems may increase our knowledge of certain styles or make other music theory contributions. They could provide tech- niques that help automate certain aspects of a computer-assisted composition system or assist in the evaluation of generated output. Fundamentally, however, the domains of music theory and composi- tion are different. Although they overlap, they are distinct. Music theory is inherently normative and reflects a codification of past achievements. Compo- sition is creative and expands the theory. The confusion between music theory and compo- sition becomes even greater when analytic systems are described in detail followed by the suggestion that by making some ad hoc changes to the system, it would also be suitable for composition. David Cope presents such an example. While that may be all it takes, the suggestion is not particularly com- pelling aesthetically. In addition to the two trajectories described by Lejaren Hiller (empirical music theory and composi- tional abstraction), a third subject attracted much attention in the 1970s and 1980s: the adaptation of advanced software technologies to computer music systems. In particular, modular, interactive object- oriented environments using languages such as Lisp and Smalltalk became popular. A significant amount of attention was paid to computer science issues in the implementation of various systems. Much of the literature dealing with these systems focuses on those issues. This a legitimate area of concern, and has resulted in increased functional- ity. Many of the musical concepts included in these elegant implementations can, however, be traced back to the abstractions of Iannis Xenakis, Gott- fried Michael Koenig, and Lejaren Hiller, or to the event-list and instrument instantiation paradigms of Music V (Mathews 1969). The challenge today and in the near future is to develop new compositional concepts that are suit- able for computer music systems. These aesthetic abstractions should be as resilient as the concepts from the 1960s have proved to be. They should rep- resent evocative simplifications of compositional ac- tivity. Without the development of some new gener- ators of parametric material, the idea of composing with a computer has little future. All that would re- main are either anthropomorphic (intelligent) mu- sic theory models or the instrument paradigm. The latter does not adequately recognize the relation- ship between composition and performance. Of course, other aesthetic abstractions and meta- phors have been developed in the last 20 years. The situation is less limited than I have sketched. Some of these build on a common ground that can be found in the 1960s-attempts to describe shape, contour, and behavior that changes over time. Ex- amples include the use of chaotic functions (Truax 1990; Bidlack 1992), 1/f noise (Dodge 1988), and morphological metrics (Polansky and McKinney 1991). The latter is of particular interest for me- Berg 25</page><page sequence="3">lodic construction and signal manipulation. Spec- tral metaphors for the generation of material have been developed (Murail 1984). Theories of meter and harmony (Barlow 1987) have been generalized. Psychological research has provided suggestions for new approaches (McAdams and Saariaho 1985). Based on this research, interesting compositions have been realized, but the resulting complex tim- bral metaphors have been hard to reduce to effec- tive generalities. The necessary compositional abstractions are not hierarchical descriptions of entire compositions, but generators of musical material or gestures. Denis Smalley's extended theory of gesture called spectro-morphology (Smalley 1986) provides a start- ing point for considering shaping constructs for mu- sical systems. Interactive music systems provide an interesting area to combine analytical music theory activities in a listener (program) together with a composing part that generates plausible responses. The second area is ripe in the short-term for the application of some newer compositional abstractions. The field of performance would be enriched by composition. Physical controllers used as part of performance systems (gloves, webs, etc.) highlight the problem of controlling complex synthesis systems (Choi, Bargar, and Goudeseune 1995), such as for physical models and analysis-synthesis. Solutions found in this area could perhaps offer insights for designers trying to provide compositional control to similarly complex and highly constrained systems. Composi- tion would be enriched by insights from the field of performance. I have no idea what the future of composition may be. Perhaps it will radically change due to the non-linearity of current media. Perhaps the shifting cultural paradigm will redefine the role of a com- poser. Perhaps nothing will change. However, in all of these cases, useful musical generators are needed. They should reflect reusable and general concepts that can be applied to create musical ex- pressions. The frenetic development of software and hard- ware systems in the last 20 years has contributed to the increased recognition of computer music as a le- gitimate domain for technical research. Musical validity requires the continual development of mu- sical concepts. Clear and elegant formulation of musical abstractions is the challenge of the near fu- ture. Recognition of the overlapping needs of com- position, synthesis, and performance systems is es- sential to accomplish this. References Ames, C., and M. Domino. 1992. "Cybernetic Composer: An Overview." In M. Balaban, et al., Understanding Music with AI. Menlo Park: AAAI Press, pp. 186-205. Barlow, C. 1987. "Two Essays on Theory." Computer Mu- sic Journal 11(1):44-60. Bidlack, R. 1992. "Chaotic Systems as Simple (but Com- plex) Compositional Algorithms." Computer Music Journal 16(3):33-47. Choi, I., R. Bargar, and C. Goudeseune. 1995. '"A Mani- fold Interface for a High Dimensional Control Space." In Proceedings of the International Computer Music Conference. San Francisco, California: International Computer Music Association, pp. 385-392. Cope, D. 1991. Computers and Musical Style. Madison, Wisconsin: A-R Editions. Dodge, C. 1988. "Profile: A Musical Fractal." Computer Music Journal 12(3):10-14. Ebcioglu, K. 1992. "An Expert System for Harmonizing Chorales in the Style of J. S. Bach." In M. Balaban, et al., Understanding Music with AI. Menlo Park: AAAI Press, pp. 295-333. Feulner, J. 1993. "Neural Networks that Learn and Repro- duce Various Styles of Harmonization." In Proceedings of the International Computer Music Conference. San Francisco, California: International Computer Music Association, pp. 236-239. Hiller, L., and L. Isaacson. 1959. Experimental Music. New York: McGraw-Hill. Koenig, G. M. 1970a. "Project 1." Electronic Music Re- ports 2:32-44. Koenig, G. M. 1970b. "Project 2: A Programme for Musi- cal Composition." Electronic Music Reports 3:4-161. Mathews, M. 1969. The Technology of Computer Music. Cambridge, Massachusetts: The MIT Press. McAdams, S., and K. Saariaho. 1985. "Qualities and Func- tions of Musical Timbre." In Proceedings of the Inter- national Computer Music Conference. San Francisco, California: International Computer Music Association, pp. 367-374. 26 Computer Music Journal</page><page sequence="4">Murail, T. 1984. "Spectra and Pixies." Contemporary Music Review 1(1):157-170. Polansky, L., and M. McKinney. 1991. "Morphological Mutation Functions." In Proceedings of the Interna- tional Computer Music Conference. San Francisco, Cal- ifornia: International Computer Music Association, pp. 234-241. Smalley, D. 1986. "Spectro-Morphology and Structuring Processes." In S. Emmerson, ed., The Language of Electroacoustic Music. London: Macmillan Press, pp. 61-93. Todd, P. M. 1989. "A Connectionist Approach to Algo- rithmic Composition." Computer Music Journal 13(4):27-43. Truax, B. 1990. "Chaotic Non-Linear Systems and Digital Synthesis: An Exploratory Study." In Proceedings of the International Computer Music Conference. San Francisco, California: International Computer Music Association, pp. 100-103. Xenakis, I. 1992. Formalized Music (revised ed.). Stuyves- ant, New York: Pendragon Press. Berg 27</page></plain_text>