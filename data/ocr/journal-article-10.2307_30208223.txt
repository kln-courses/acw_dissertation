<plain_text><page sequence="1">Computer Courses for the Humanist: A Survey Leila de Campo To measure the changes which had occurred in teaching humanists the ways of the machine since the report published in September 1971, CHum distributed new questionnaires last spring. Thirty-five were returned, including twelve from institutions which had previously reported. From the new listings, an apparent increase in the number of such courses being offered can be deduced. (Institutions which desire to list courses next year are invited to write for a questionnaire.) The tables into which the data have been condensed reveal the same diversity which characterized last year's analysis. Two obvious generalizations may be derived from this tabulation. First, there seems to be no concentration in any particular region of the United States, since courses of this type are offered wherever there is high population density (e.g., California, New York, Illinois). Second, the reports from abroad all come from English-speaking countries (Great Britain, Canada); either we are not getting a satisfactory response from other countries, or formal instruction in computer application is not being offered to humanists outside that limited area. Several institutions which responded to the earlier canvass (Brown, California at San Diego, Cal Tech, Kansas, New School, SUNY at Binghamton and Stony Brook, Notre Dame, Ohio State, Waterloo) failed to return questionnaires this year, yet undoubtedly many of these continue to offer this type of course. From voluntary responses it is impossible to determine which courses are not being offered every year, which have been temporarily suspended for lack of funds, student interest, or qualified instructor, and which have been deleted from the catalog for reasons of economy or policy. Another observable phenomenon is that more than 50 per cent (19) of the courses currently reported are offered by departments of computer science or computer centers. Of these, only five require a preliminary course in computer science and only one requires algebra. This seems a healthy move to attract non-specialists into a field which is all too often conducted like a secret fraternity, and where suspicion of "soft" disciplines occasionally mars cooperation. When a course is offered by a computer department or facility, however, the emphasis tends in many cases to be on programming or machine operation; one must wonder, in these instances, how much applicability the student can discern for his own subject. On the other hand, courses under the jurisdiction of humanities departments (especially music) seem more concerned about the qualifications of the students admitted, particularly if graduate credit is offered. With these, the reverse question arises: how close does the student come to adequate technical mastery, including minimum programming skill? Presumably there are many institutions with a faculty qualified to handle both the computer technology and at least one humanities subject. It is to be hoped that their number will increase. Leila de Campo is assistant director of the computer center at Vassar College. 57</page><page sequence="2">58 Computers and the Humanities/Vol. 7, No. 1/September 1972 I D. Institution Dept. Course Title Instructor Credit 2. UC, Berkeley Comp Sc Comp in Humanities (2 qtr) L. Gould Both 3b. UCLA Classics Comp Tech in Classic Studies D. W. Packard Both 6. Case-Western Res Lib Sc Comp in Humanities P. A. Richmond P/G 7. U Chicago Ling Lang, Symbolic Proc, Comp V. Yngve PIG 8. Cornell U Comp Sc Info Org/Retr G. Salton Both 12a. SUNY, Buffalo Comp Sc Comp in Humanities N. V. Findler P/G 16. Princeton U History Quant Tech Hist Res T. K. Rabb P/G 17. U Rochester Music Comp Appl (I and II) S. M. Kostka Both 18a. U S Carolina Comp Sc/Eng Comp Meth Hum Prob R. L. Oakman Both 18b. U S Carolina Comp Sc Intro Non-Numeric Proc R. L. Oakman U/G 19. Stanford U Comp Sc Comp in Soc Sc and Hum D. Raj Reddy 20. U Texas Comp Sc Comp in Humanities N. B. Dale Both 22a. Yale U Hist Quant Meth Hist Res J. L. McCarthy Both 22b. Yale U Music Res Topics in Comp Mus A. W. Slawson P/G 23. Claremont Grad Sch Psych Comp Appl in Soc Res H. J. Coffey P/G 24. U Colorado English Comp Appl in Hum L. B. Hall/ Both L. W. Sawin 25. U East Anglia Comp Center Comp Appr for Arts Students R. J. W. Housden/ Non- W. J. Milne credit 26a. U Iowa Music Mus Res and Comp F. Crane P/G 26b. U Iowa Ling Intro Lang Data Proc R. S. Wachal Both 27. U Kent Comp Lab Comp for Hum Students 28. King's College, London German Comp Appl Lang/Lit Res R. A. Wisbey P/G 29. Laval U Ling Auto Anal Ling Texts M. S. Mepham U/G 30. U Manchester Comp Sc ALGOL 68 Prog Group Non- credit 31a. U Michigan Comp/Comm Comp Ling B. W. Arden Both 31b. U Michigan Comp/Comm Theories of Grammar B. W. Arden Grad 31c. U Michigan Comp/Comm Sem/Natural Lang B. W. Arden 32. Northwestern U Ling Intro Comp Ling R. N. Smith Both 33. U Pennsylvania Comp/Inf Sc Sem/Ling Proc A. K. Joshi P/G 34. Pennsylvania St U Eng/Comp Sc Lang Anal/Comp Stylistics (3 qtr) J. B. Smith Both 35. Purdue U Comp Sc Intro Comp for Hum L. Hunter/V. Jett U/G 36. Queens College, CUNY Music Comp Tech for Mus Res R. Erickson P/G 37. Vassar College Comp Sc Sem/Comp and Hum L. de Campo U/G 38. Washington U Comp Sc Comp in Humanities S. V. Pollack U/G 39. Xavier U Comp Sc Comp Tech/Urban Life U/G 40. York U Nat Sc Comp and Society L. J. Murphy U/G</page><page sequence="3">de Campo/Computer Courses 59 Prerequisite Textbooks and other material None SNOBOL4 notes by instructor; selected readings. Anc Lang Various. None Computers and the Humanities. Grad Computer Programming with COMIT H (MIT,1962) Comp Org, Prog G. Salton, Automatic Information Organization and Retrieval (McGraw-Hill, 1968); G. Salton, The SMARTSystem (Prentice-Hall, 1971). Comp course E. Bowles, Computers in Humanistic Research (Prentice-Hall, 1967); J. Leed, The Computer and Literary Style (Kent State, 1966); H. Borko, Automated Language Processing (Wiley, 1967); Y. Bar-Hillel, Language and Information (Addison-Wesley, 1964); Literary Data Processing Conference Proceedings, Sept. 1964 (IBM); Computers in the Humanities Conference Proceedings, June 1969 (IBM). None E. Shorter, Historian and the Computer (Prentice-Hall, 1971); C.M. Dollar and R. J. Jensen, Historian's Guide to Statistics (Holt, 1971); Roderick Flond, Introduction to Quantitative Methods for Historians. Second yr Music E. I. Organick, A FORTRAN IV Primer; R. E. Griswold, et al., The SNOBOL4 Theory Programming Language; PL/I manuals by IBM. None T. H. Crowley, Understanding Computers (McGraw-Hill); programming manual for string processing language (SNOBOL or COMIT); selected books, articles. None (Same as 18a). Upper class E.Bowles, Computers in Humanistic Research (Prentice-Hall, 1967). None J. W. Tukey, Exploratory Data Analysis (prelim. edn.); K. Janda, Data Processing: Applications to Political Research (Northwestern Univ. Press, 1965); C. M. Dollar and R. J. Jensen, Historian's Guide to Statistics (Holt, 1971); V. O. Key, Jr., A Primer of Statistics for Political Scientists, (Crowell, 1966). Music M. V. Mathews, Technology of Computer Music (MIT Press, 1969); A. W. Slawson, "A Speech-Oriented Synthesizer of Computer Music," Journal of Music Theory (1969). Statistics/Math Lecture notes; computer manuals. None R. A. Wisbey,The Computer in Literary and Linguistic Research (Cambridge Univ. Press, 1971); Computers and the Humanities; various concordances; Glickman and Staalman, Manual. None M. P. Barnett, Computer Programming in English (Harcourt, Brace, 1969). None R. E. Griswold, et al., The SNOBOL4 Programming Language; misc. handouts. None F. Bates and M.L. Douglas, Programming Language/One, 2nd edn., (Prentice-Hall, 1970). None Manual for SCAN; misc. laboratory handouts. Grad R. A. Wisbey, The Computer in Literary and Linguistic Research (Cambridge Univ. Press, 1971). None D. G. Hays, Introduction to Computational Linguistics (American Elsevier, 1967). None C. H. Lindsay and S. G. van der Meulen, Informal Introduction to ALGOL 68 (North Holland, 1971); C. H. Lindsay, "ALGOL 68 with Fewer Tears," Computer Journal (May 1972);ALGOL 68 Manual (Univ. of Manchester, Dept. of Computer Science). Ling/Intro to Comp Ling Ling/Comp exp Various. Elem Algebra Technical reports; articles; notes. None Cole, Introduction to Computing; various IBM manuals. None L. Hunter, FORTRAN IV Programming for the Humanities and Liberal Arts (in preparation, used in class notes form); Rothman and Mossman, Computers and Society (SRA, 1972); K. Vonnegut, Player Piano. Music SNOBOL4 manual; description of the Ford-Columbia music representation (DARMS). Comp course Selections from Stone, et al., General Enquirer; journals; technical reports. Comp courses S. V. Pollack and J. Sterling, Guide to PLII (Holt, 1969); R. E. Griswold, et al., The SNOBOL4 Programming Language; D. G. Hays, Introduction to Computational Linguistics (American Elsevier, 1967); J. Reichardt, Cybernetic Serendipity (MacKay, 1968); Computers and the Humanities. Soph None Z. W. Pylyshyn, Perspectives on the Computer Revolution (Prentice-Hall, 1970); Of Men and Machines (Dutton, 1963); E. Bowles, Computers in Humanistic Research (Prentice-Hall, 1967); Cress, et al., FORTRAN IV with Watfor and Watfiv (Prentice-Hall, 1970); More about Computers (IBM, 1971); "Information," Scientific American, 1966.</page><page sequence="4">60 Computers and the Humanities/Vol. 7, No. 1/September 1972 The two problems cited last year still remain: there seems to be no published textbook to serve any of these courses, even those confined to verbal data processing, and there is no consensus on the most suitable programming language. Instructors who do not make do with standard manuals for SNO BO L, FORTRAN, PL/I, or ALGOL, or with SCAN or SNAP, seem to fall back on collected essays, which seldom describe a method in great detail, or to distribute their own locally produced notes. Certainly a satisfactory textbook based on one of the widely available languages would serve a wide and growing need. Aims and Remarks (Numbers refer to chart on pp. 58-59.) 2. To make students aware of usefulness of the computer in their area and to teach them enough programming for their own research. SNOBOL4 used. 3b. To survey computer techniques in the study of the ancient world (Greek and Latin texts) with emphasis on individual projects. FOR TRAN, SNOBOL used. 6. To familiarize the student with methodology applicable to library problems. The stress is on rationale and rearrangement of data more than on programming. 7. To introduce non-numerical uses of the computer, both as a tool and as a model. Emphasis is on basic topics (hierarchies, prefix notation, syntax). 8. To cover all aspects of automated language processing on digital computers with emphasis on applications to information retrieval and analysis by statistical, syntactic, logical methods. 12a. To introduce students to the use of computers for humanistic research. People from disciplines other than computer science are welcome. 16. To teach elementary statistics and computer applications. 17. To introduce music students to various applications of computer technology in their field. Programming problems assigned in PL/I, FORTRAN, SNOBOL. 18a. To prepare advanced students in the area of non-numeric computer application. Programming is taught with emphasis on close examination of humanistic problems. SNOBOL or COMIT used. 18b. To introduce fundamental principles of computer, logic, flowcharting, program- ming. Students write programs to analyze natural language materials. SNOBOL or COMIT used. 19. To stress the non-numeric application of computers. Emphasis is on symbol manipulation rather than arithmetic processes. 20. To introduce students in the social sciences and humanities to the computer as a tool in their own areas. Elementary SNOBOL used to enable students to write programs. 22. To give students an idea of how to use quantitative data from the past including use of computer programs. Emphasis on how to "feel what data are like" rather than on cookbook formulas. Modified regression and analysis of variance techniques for "messy data." 22b. To introduce certain techniques for computer synthesis of music. A graded series of exercises climaxing with an attempt at a composition using computer synthesized sound. 23. To develop appreciation for the power and limitation of the computer and its impact on society. To lead the student to a usable level of skill. 24. To treat text analysis for authorship, stylistics, collations, concordances, preparation of statistical data. No programming required. 25. To introduce computers to non-scientists for an appreciation of the impact of the computer. SNAP and FORTRAN programs demonstrate various applications.</page><page sequence="5">de Campo/Computer Courses 61 26a. To teach the use of a musical notation (DARMS) and a programming language SNOBOL (SPITBOL) using computer applications in music theory, history, and composition. 26b. To teach students to write a reasonably complex program and to acquaint them with information sources in literary and linguistic computing. PL/I used. 27. To equip students to recognize whether a problem is solvable by mechanical methods, and to teach them to program or to be able to communicate needs to a computer professional. SCAN used. 28. To familiarize staff research students and those taking graduate courses with applications of the computer to the humanities. (Four two-hour sessions.) 29. To present basic notions; to serve as an introduction to computational techniques. 30. To acquaint literary and linguistic scholars with ALGOL 68 so that they may be able to assess its potential value. (Four day intensive course.) 32. To teach natural language data processing (pattern matching, string manipulations, coding, and storage schemes) and application in concordances, stylistics, lexicon construction. SNOBOL 4 used. 33. To give insights into structure of language, why it can be approached mathematically and to what extent. (Motivate possible applications beyond linguistics.) 34. To develop technical competence to plan and implement computer programs in language analysis and humanities and develop familiarity with methodology of computer applications. 35. To teach liberal arts students who may never use a computer again what it is, what it does, and what is involved in programming one. FORTRAN used. 36. To prepare the student for independent research in music theory and musicology. Stress is on rigor of method, computer utilization, and worthiness of research topic. SNOBOL, DARMS used. 37. To examine in depth three areas of computer activity (language processing, urban planning, and artificial intelligence) by combining seminars and visiting lecturers. PL/I, FORTRAN, APL used. 38. To explore concepts and techniques being used for computer-aided work. Emphasis is on algorithm and application rather than on programming. SNOBOL4, PL/I used. 39. To aid the student in gaining a perspective of the computer revolution rather than technical expertise. 40. To give students an appreciation of the power and limitations of the computer. Emphasis is on the role of the computer in development of modern science and social implication. FORTRAN used. Advice and Guidelines (Numbers refer to chart on pp. 58-59.) 2. Attempt to establish the course in a language or linguistics department, and advertise heavily. Use an interactive system if possible. Avoid FORTRAN and ALGOL and choose interesting, challenging but non-numeric problems. 8. Don't limit yourself to SNO BOL and other special languages.Advertise as humanistic. 12a. Collect areas you want to cover. List major references in each. Give each area to a student who feels close to it. Let him do further research. 16. Do not aim too high and progress slowly. 19. Prof. D. Raj Reddy offers a set of exercises in statistics, natural language processing, language translation, poetry concordance, and information retrieval to interested readers. 20. Don't mix computer science students and humanities students; the former are more interested in how things are done while the latter are interested in what is being done.</page><page sequence="6">62 Computers and the Humanities/Vol. 7, No. 1/September 1972 22. Beware of cookbook techniques which can often be misleading when using the types of data on which historians usually have to rely. 22b. Assign exercises in which students produce and actually synthesize short pieces from the beginning. Use input languages that exploit compositional skills of the student. Try to teach computer programmiing during special sessions of the course to preserve musical emphasis. 23. Plan to confront directly and frequently the anxiety that some students feel about the computer. The anxiety seems due to a view of computers as being complex and anthropomorphic. 24. Get enough time on the computer so everyone in class can work on his own project. 25. Be flexible to the needs and interests and backgrounds of the various classes. (Make a survey to determine these interests.) 26a. It has proven valuable for students to begin punching and running programs immediately. 26b. It is important that the teacher is patient and puts forth a great deal of pedagogical effort. Since this is a course in how to think in a new language, go slowly and be very repetitious. 27. It is important to have a simple language; an on-line, interactive environment is advantageous. Seek advice and active participation from departments in the humanities, particularly in planning courses. 29. Avoid a wide range of preparedness in students if possible by having an initiatory course in programming as prerequisite. 30. Long practical sessions were primarily planned for programming and short ones for examining output and corrections and checking data preparation. 32. Be flexible in tailoring course to the interests of the students. 33. Such a course should be established either in the computer and information science program or in the formal linguistics program. 34. A term project is very useful. 35. Students must get actual programming experience. Programs should be kept short and frequent. A free choice term project under close supervision is valuable. 37. In addition to an assigned individual project which should be closely supervised, a cooperative project in which each student contributes data and programs is a valuable lesson in communication and standardization. 38. Do not try to combine programming and computers and the humanities in one course; have it as a prerequisite. Use a universal introductory course so that humanists don't have to be segregated. 39. Be sure program is taught by someone with a broad background, sufficient technical depth, and ability to communicate at a non-technical level.</page></plain_text>