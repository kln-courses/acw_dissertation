<plain_text><page sequence="1">2004-01-2164 Maintenance Action Model for Virtual Maintenance Simulation Liu Hui, Li Xinxing and Hao Jianping Maintenance Engineering institute, Shijiazhuang, China Copyright © 2004 SAE International Abstract Requirements of maintenance simulation and related works are examined. We represent the decomposition of maintenance for simulation. The information of human movement and motion is described in the maintenance simulation , and should be defined as maintenance therblig. Building upon this description of decomposition, we encapsulate Jack functions into those maintenance therblig functions which can be used to simulate maintenance actions. Graphic interface is used to create the simulation script with those therblig functions interactively. A task of transmission cover removing is used as instance to validate our works. 1. Introduction During the traditional development of the products, maintainability analysis, evaluation and demonstration are performed iteratively through practical prototype. The manufacturing of practical prototype will take a lot of time and cost, which lengthen the cycle of product development. However, after full scale physical prototype or mockup is fabricated, design modification suggested by maintainability engineer is often refused because of time or cost consideration. With the development and application of CAD, product design and maintainability analysis tend to concurrency and integration. But it's difficult for the existing CAD systems to make the maintenance process analysis visible. Appearance of the virtual reality provides a chance for solving above problem. Virtual reality can provide a virtual environment with well immersion of sense, interactive and imagination. User can disassemble the parts in the virtual environment, then can analyze and estimate the maintainability of product, and also can validate maintenance procedures and assist maintenance training. To analyze and estimate the maintainability or to do the maintenance training using virtual reality, firstly the maintenance process simulation must be done, and the simulation of the actions in the maintenance is the base. In maintenance technical instruction, maintenance process information generally only includes the target information, for example disassemble a cover of the transmission case, it includes little information about how to disassemble the cover! It is maintainer's duty to decide how to grasp the part, maintainer's posture and position, and how to avoid obstacle. However, in the virtual maintenance simulation, especially in non-immersive system, the detail of the operation must be provided, otherwise the virtual maintainer will be puzzled because of lacking "virtual intelligence". This article mainly discuss how to script the hierarchy of the maintenance and how to create the action module of the maintenance in order to make the simulation system know how to do the detail operation, and at the same time the system will not make user's operation intricate. 2. Related works Since 1990, many researchers have studied the virtual maintenance simulation. Ranko Vujosevic[l] has done some work in analysis of the maintenance and action. He considered that for an anthropomorphic maintainability analysis, the task should be decomposed to the extent that it supports the simulation. In order to develop models of human motions to support the maintenance task analysis, it is necessary to combine required movements with the functions that are performed. Based on it, he pointed out a framework for a hierarchical decomposition of the maintenance task into four levels is defined as maintenance task level, disassembly/reassembly sequence level, disassembly/reassembly step level, maintenance primitives level. Since there are various levels of complexity for tasks, the human motions in the tasks are complex. They can be represented in the following hierarchy: 1. Micro Motion. Basic human motion of a body segment such as moving arm, turning head, closing hand, etc. 2. Macro Motion. A complex human motion composed of a sequence of micro motions such as changing posture or walking. 3. Micro Model. Model of an activity that involves dealing with object manipulation or maintenance primitives by using a sequence of micro and/or macro motions. 155</page><page sequence="2">4. Macro Model. Several micro models sequenced to accomplish complex maintenance activities. HMS Center of Pennsylvania University has been engaged in human module and simulation for a long time. They studied how to finish the integrated simulation of maintenance procedure with the base action functions provided in Jack. In addition, they did the further research about the translation between the natural language and the simulation program for maintenance procedure [2]. They defined an action representation concept named parameterized action represent (PAR) [3]. The SRL of Georgia Institute of Technology has researched the decomposition of maintenance in the virtual disassembly study. In order to contain detailed disassembly process information in process module of virtual prototype, they decomposed the maintenance into four levels as task level 3, task level 2, task level 1, and operation[4,5]. Task level 3 is composed of more than one operation with a certain sequence, task level 2 consists of sequenced task level 3, and the rest may be deduced by analogy. According to their method, maintenance is decomposed into tasks and/or operations, which can be expressed as a hierarchical tree. Then the information of task and operation is represented separately. This way of decomposition almost can include all information about operation. Presently there is some available commercial software for human simulation and ergonomics study, such as Jack and Deneb Envision. They also support the virtual maintenance simulation. Jack system provides an approach for user to control the simple human action. It can adjust the human action through adjusting joint motion of human. Action is controlled by the constraint of joints in human. The animation system of Jack records the adjustment procedure of joints and creates the simulation of the whole process. In addition, Jack also provides a simulation environment in which the script language is used. The whole movement simulation script can be created by combining the functions corresponding to simple actions of joints and their controls. Deneb Envision system is similar to Jack. It can also provide some tools and functions for user to control base human motion. And it uses GSL (Graphic Simulation Language) to simulate human action, so it is convenient for user to simulate the action. 3. Maintenance decomposition and action design 3.1. understanding the problem According to the requirements of maintenance simulation, it should be convenient and efficient to build maintenance model and execute simulation. However, the human action control function that the commercial software provided does not meet this. Therefore the problem we need to resolve is how to use the commercial software (such as Jack) to realize the maintenance process simulation conveniently and efficiently. A maintenance task should be expressed at a level so that the contained process information is understand easily and simulated conveniently with commercial software such as Jack. It is generalized as Fig. 1. script p- ; ' Function Maintenance action! encapsulation : Maintenance j convenient for ' ^ Jack task ; simulation ; ^ functions ¡ (key question) i : Figurei. Relationship between task and Jack The key to solve the problem is how to script the maintenance task so that it can include the information about the movement and motion of maintainer, and facilitate user to simulate the maintenance action. On the other hand, how to encapsulate Jack functions to realize various maintenance actions conveniently is another problem to be solved. 3.2. decomposing maintenance When representing a maintenance task, this task is separate into several sub-tasks. Once every sub-task is well represented, the whole maintenance simulation would be finished. The transmission case, for example, its description of decomposition of maintenance procedure is like figure2. Figure2. Decomposition of transmission maintenance 156</page><page sequence="3">Generally the maintenance is decomposed to the elementary maintenance activity level [6], and no further decomposition is done. There is no information about the human movement and action included in this level, and it is difficult to realize the simulation. Functions provided in Jack cannot be directly used to simulate the elementary maintenance activity. The further decomposition is required. Analyzing the process of human movement in maintenance, it is obvious that a maintainer will experience such a process, firstly move to operation position, and then adjusts his posture, and at last finish target operation (include empty-handed operation and operation with tools). This shows that the information about human move and motion in the task should be elements of the elementary maintenance activity. Based on above analysis, the elementary maintenance activity is decomposed into maintenance therblig level as shown in figure2. In this level all the information about human movement and motion during a task are included. Almost all the actions in maintenance can be scripted with the combination of the maintenance therblig. It can be used to simulation for that the therblig reflect the characteristic of human movement and motion. In human factor engineering area, seventeen or eighteen therbligs are generalized for motion analysis [7]. In our study, this idea was adopted, and several therbligs shown in Fig. 3 were abstracted specially for maintenance simulation. Figure3. Maintenance therblig that compose the actions for maintenance 3.3. encapsulating Jack functions Most functions provided by Jack software belong micro model, they should be reasonably encapsulated for maintenance simulation application. The maintenance decomposition based on the human movement and motion give a reference to the encapsulation of functions. Since the maintenance motion is combined with all the corresponding joints motion, we can encapsulate Jack functions as maintenance therblig functions for user to simulate actions conveniently. A therblig library is built through encapsulating various Jack functions as fig.4. Therblig is the elementary function of maintenance simulation system. User can directly parameterized therblig model and edit simulation script, there is no need to know its interior detail. Move I ļ i function ! Push, pull, lift ļ j ļ *1 etc therblig ! j Constraint j functions | function Rotate function ! ~ T~~ ~ i ļ i Screw, rotate etc ; ! therblig functions! Í Constraint ! I ; T , 1 therblig Jack T , function „ ^ . r- r . , • function „ ^ . for r- functions r . , • , . . maintenance , library, . . Finger joints simulation . ; motion - ] function j Constraint Grasp therblig ! function function ļ ¡ Interference check function Figure4. Encapsulation of Jack functions 4. Implementation A script language of Python is provided in Jack. The secondary development platform can be used to create simulation script interactively. That is the creation of scripts by using graphic interface. It is based on the idea discussed in chapter 3 to decompose the maintenance, script the human movement and motion step by step, and create the simulation script. User can control the procedure of maintenance by selecting the human movement and action through the graphic interface. It is very convenient for user to realize and control the maintenance simulation. The procedure is like figure5. Figure5. Procedure of maintenance simulation realization 157</page><page sequence="4">4.1. move simulation The realization of the simulation that human move to operation position is showed following: Select move method - &gt; select posture - » select or edit path - ► do move function The function that realizes the movement simulation is: Move ( Move_method=Select (move_method) Posture=Read (posture) Path=CreatePath(pnt 1 ,pnt2, ,pntn) ) The interface that realizes the movement simulation is like figureó. Figureó. Interface that control the simulation of movement 4.2. posture simulation After moving to the operation position, posture needs to be adjusted to reach the appropriate operation posture. The realization of the simulation that human adjusts operation posture is showed following: Select posture - ► do posture adjusting function The function that realizes the posture simulation is: Posture ( Posture=select (posturename) ) 4.3. grasp simulation The realization of the simulation that human grasps object is showed following: Select hand-shape - ► select the grasp site - &gt; select the hand type - ► do the grasp function The function that realizes thegrasp simulation is: Grasp ( Hand_shape=select (handeshape) Grasp_site=select (site) Type=handtype 4.4. operation simulation Dealing with empty-handed operation, for example, the realization of the simulation that human do an operation is showed following: Select object - ► select the operation action - ► select value - » do the operation action function The function that realizes the operation action simulation is: Operate ( Object=select (object) Operation=select (operation) Value=select (value) ) The interface that realizes the adjusting posture, grasp, operation, resumes and release simulation is like figure7. Figure7. Interface that control the simulation and create the simulation script 5. Instance A transmission case was selected as application example. Gears replace is the target maintenance task. In order to finish the task, the cover should be removed. There are four operations to do for the purpose. The sequence operations are unscrewing screw, unscrewing six fasteners, drawing two pins, and removing the cover. We simulate the first operation as instance. After the selections in the graphic interface showed in figure7, the 158</page><page sequence="5">simulation script of the operation can be created that is represented as following: walk ([Vector3(74.509438, 0.0, 62.302231), Vector3(-26.490562, 0.0, 62.302231), Vector^ ! 26.490562,0.0,110.302231)]) | scene.human.Rotate (angle=84*u.deg,axis='y') ¡ js.scene.human.Pose ('bend') createtool ('wrench', 'right') wrench (js.scene.human,js.scene.little_nut0,js.scene.little_nut0.seg0.toolsite,(0.0, 0.0, 2.0),js.scene.wrench) position (js.scene.human,js.scene.little_nut0,js.scene.little_nut0.seg0.worksite, 'right', 'q-x2') : boost (js.scene.human,js.scene.little_nut0,js.scene.little_nut0.seg0.worksite,(0.0, 0.0, | 4.0),'right',l) moveobject (j s. scene. little nutO, [Vector3 (-42.484 1 16, 0.0, 1 19.709236)], 'right') humanobjectratate (js.scene.little_nut0,59) place_object(js.scene.human,js.scene.little_nut0,js.scene.little_nut0.seg0.worksiteos.scene.table 1 1, 'right') release_resume (js.scene.human, 'right', 1 ) Several frames are intercepted from the implement of opening cover operation to illuminate the simulation. See following figures. Figure8. Unscrew fastener action simulation Figure9. Disconnect fastener action simulation FigurelO. Remove cover action simulation 6. Conclusions After analyzing the requirements of maintenance simulation and the limitation of current available human simulation software, a solution is suggested, namely the information of human movement and motion is described in the maintenance simulation, and should be defined as maintenance therblig. Jack functions are encapsulated to those maintenance therblig functions. Graphic interface is used to create the simulation script with those therblig functions. The further work is to simulate the action more realistically and realize the intelligent human for simulation. 7. Reference [1]. Ranko Vujosevic and John Ianni. A Taxonomy of Motion Models for Simulation and Analysis of Maintenance Tasks. Center for Computer Aided Design. The University of Iowa. Department of the Air Force AL/HRGA Wright- Patterson AFB, OH [2]. Norman Badler, Charles Erignac, Design concepts for automating maintenance instmctions, AFRL-HE-WP-TR- 2000-0088 [3]. Ramamani N. Bindiganavale , Building parameterized action representation from observation, University of Pennsylvania, 2000 [4]. Bauer, M. D., Siddique, Z., and Rosen, D. W., "Virtual Prototyping In Simultaneous Product/ Process Design For Disassembly." Book chapter in: Rapid Response Manufacturing: Contemporary Methodologies, Tools and Technologies, Ed. John Dong, 1997. [5]. Siddique, Z and Rosen, D W, "Automated Product Disassembly Reasoning, "Computer- Aided Design, vol. 29, no. 12, pp. 847-860, 1997. [6]. Benjamin S. Blanchard, Maintainability: a key to effective serviceability and maintenance management, John Wiley &amp; Sons, Inc. 1994 [7]. Sun Linyan, human factor engineering, China Science and Technology Press, 2001 159</page></plain_text>